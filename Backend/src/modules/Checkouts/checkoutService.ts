import { checkoutRepository } from "./checkoutRepository";
import { notifyUser } from "../../utils/lineNotify";
import { CheckoutRequest } from "./checkoutModel";
import prisma from "../../prisma";

/* üóìÔ∏è ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ö‡∏ö‡πÑ‡∏ó‡∏¢ */
const formatThaiDate = (dateInput: string | Date) => {
  const date = typeof dateInput === "string" ? new Date(dateInput) : dateInput;
  return date.toLocaleDateString("th-TH", {
    year: "numeric",
    month: "long",
    day: "numeric",
  });
};

export const checkoutService = {
  /* üìã ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (Admin) */
  async getAllCheckouts() {
    return await checkoutRepository.findAllCheckouts();
  },

  /* üë§ ‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡πà‡∏≤‡∏î‡∏∂‡∏á booking ‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á (‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏Ñ‡∏∑‡∏ô‡∏´‡πâ‡∏≠‡∏á) */
  async getMyBookings(accessToken: string) {
    const { userId } = await checkoutRepository.verifyLineToken(accessToken);
    const customer = await checkoutRepository.findCustomerByUserId(userId);
    if (!customer) throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö");

    return await checkoutRepository.findBookingsByCustomer(customer.customerId);
  },

  /* üö™ ‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡πà‡∏≤‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡∏´‡πâ‡∏≠‡∏á */
  async requestCheckout(bookingId: string, data: CheckoutRequest) {
    const { accessToken, checkout } = data;
    if (!accessToken) throw new Error("‡πÑ‡∏°‡πà‡∏°‡∏µ accessToken ‡∏à‡∏≤‡∏Å LINE");
    if (!checkout) throw new Error("‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡∏´‡πâ‡∏≠‡∏á");

    const { userId } = await checkoutRepository.verifyLineToken(accessToken);
    const customer = await checkoutRepository.findCustomerByUserId(userId);
    if (!customer) throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö");

    const booking = await checkoutRepository.findBookingById(bookingId);
    if (!booking) throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á");
    if (booking.customerId !== customer.customerId)
      throw new Error("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Ñ‡∏∑‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ");

    const updated = await prisma.$transaction(async (tx) => {
      return await tx.booking.update({
        where: { bookingId },
        data: {
          checkout: new Date(checkout),
          checkoutStatus: 0,
          returnStatus: 0,
        },
        include: { customer: true, room: true },
      });
    });

    const adminMsg = `üì¢ ‡∏°‡∏µ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì : ${booking.customer.userName} \n
-----------‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤-----------\n
‡∏ä‡∏∑‡πà‡∏≠: ${booking.customer.fullName}
‡∏´‡πâ‡∏≠‡∏á: ${booking.room.number}
‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ : ${booking.customer.cphone}
‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô: ${formatThaiDate(checkout)}\n
-------------------\n
‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà: https://smartdorm-admin.biwbong.shop`;

    const userMsg = `üì¢ ‡πÑ‡∏î‡πâ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡∏´‡πâ‡∏≠‡∏á ${booking.room.number}
‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ${booking.customer.userName} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß\n
-----------‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤----------\n
‡∏£‡∏´‡∏±‡∏™‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á: ${booking.bookingId}
‡∏ä‡∏∑‡πà‡∏≠ : ${booking.customer.fullName}
‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏≠‡∏≤‡∏ó‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£: ${formatThaiDate(checkout)}
‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡∏£‡∏≠‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ \n
‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì : \nhttps://smartdorm-detail.biwbong.shop/checkout/${booking.bookingId} \n
--------------------\n
‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ üè´SmartDormüéâ ‡∏Ñ‡∏£‡∏±‡∏ö
`;

    await notifyUser(booking.customer.userId, userMsg);
    if (process.env.ADMIN_LINE_ID)
      await notifyUser(process.env.ADMIN_LINE_ID, adminMsg);

    return updated;
  },

  /*  ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Ñ‡∏∑‡∏ô‡∏´‡πâ‡∏≠‡∏á */
  async approveCheckout(bookingId: string) {
    const booking = await checkoutRepository.findBookingById(bookingId);
    if (!booking) throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á");
    if (!booking.checkout) throw new Error("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡∏´‡πâ‡∏≠‡∏á");

    const actualCheckout = new Date();

    const updated = await prisma.$transaction(async (tx) => {
      const updatedBooking = await tx.booking.update({
        where: { bookingId },
        data: {
          actualCheckout,
          checkoutStatus: 1,
          returnStatus: 1,
        },
        include: { customer: true, room: true },
      });

      await tx.room.update({
        where: { roomId: booking.roomId },
        data: { status: 0 },
      });

      return updatedBooking;
    });

    const userMsg = ` ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô‡∏´‡πâ‡∏≠‡∏á
‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì : ${booking.customer.userName}\n
-----------‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤----------\n
‡∏´‡πâ‡∏≠‡∏á: ${booking.room.number}
‡∏ä‡∏∑‡πà‡∏≠ : ${booking.customer.fullName}
‡∏£‡∏´‡∏±‡∏™‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á : ${booking.bookingId}
‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ : ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß
‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏≠‡∏≤‡∏ó‡πå‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏: ${formatThaiDate(actualCheckout)}\n
‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡πÉ‡∏´‡πâ‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏î‡∏π‡πÅ‡∏•‡∏´‡∏≠‡∏û‡∏±‡∏Å ‡πÄ‡∏ä‡πá‡∏Ñ‡∏î‡πâ‡∏ß‡∏¢ ‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö : 
https://smartdorm-detail.biwbong.shop/booking/${booking.bookingId}\n
--------------------\n
‡∏Å‡∏£‡∏∏‡∏ì‡∏≤ ‡∏Å‡∏£‡∏≠‡∏Å ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏Ñ‡∏∑‡∏ô
‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£ : ___________
‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏∑‡πà‡∏≠ : ___________
‡∏ä‡∏∑‡πà‡∏≠ : ___________
--------------------\n
‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ üè´SmartDormüéâ`;

    await notifyUser(booking.customer.userId, userMsg);
    return updated;
  },

  /* ‚ùå ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô‡∏´‡πâ‡∏≠‡∏á */
  async rejectCheckout(bookingId: string) {
    const booking = await checkoutRepository.findBookingById(bookingId);
    if (!booking) throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á");

    const updated = await checkoutRepository.updateBooking(bookingId, {
      returnStatus: 2,
    });

    const userMsg = `üì¢ ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô‡∏´‡πâ‡∏≠‡∏á 
‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì : ${booking.customer.userName} \n
-----------‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤----------\n
‡∏´‡πâ‡∏≠‡∏á : ${booking.room.number}
‡∏ä‡∏∑‡πà‡∏≠ : ${booking.customer.fullName}
‡∏£‡∏´‡∏±‡∏™‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á : ${booking.bookingId}
‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ : ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥\n
--------------------\n
‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ ‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏• ‡∏ú‡πà‡∏≤‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ô‡∏µ‡πâ ‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö
‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ üè´SmartDormüéâ ‡∏Ñ‡∏£‡∏±‡∏ö`;

    await notifyUser(booking.customer.userId, userMsg);
    return updated;
  },

  /* ‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô (Admin ‡πÉ‡∏ä‡πâ) */
  async updateCheckout(bookingId: string, body: any) {
    const { checkout, returnStatus } = body;
    const booking = await checkoutRepository.findBookingById(bookingId);
    if (!booking) throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô");

    return await checkoutRepository.updateBooking(bookingId, {
      ...(checkout && { checkout: new Date(checkout) }),
      ...(returnStatus !== undefined && { returnStatus }),
    });
  },
  /* üö™ ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏à‡∏£‡∏¥‡∏á (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏¥‡∏ô‡∏à‡∏£‡∏¥‡∏á) */
  async confirmReturn(bookingId: string) {
    const booking = await checkoutRepository.findBookingById(bookingId);
    if (!booking) throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á");
    if (booking.checkoutStatus === 1) throw new Error("‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏∑‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß");

    const actualCheckout = new Date();

    const updated = await prisma.$transaction(async (tx) => {
      const updatedBooking = await tx.booking.update({
        where: { bookingId },
        data: {
          actualCheckout,
          checkoutStatus: 1,
        },
        include: { customer: true, room: true },
      });

      //  ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏´‡πâ‡∏≠‡∏á‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô ‚Äú‡∏ß‡πà‡∏≤‡∏á‚Äù
      await tx.room.update({
        where: { roomId: booking.roomId },
        data: { status: 0 },
      });

      return updatedBooking;
    });

    //  ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡πà‡∏≤
    const userMsg = `üè† ‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏≠‡∏≤‡∏ó‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à : \n
-----------‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤----------\n
‡∏£‡∏´‡∏±‡∏™‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á: ${booking.bookingId}
‡∏´‡πâ‡∏≠‡∏á ${booking.room.number} \n
‡∏ä‡∏∑‡πà‡∏≠: ${booking.customer.fullName}\n
‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${formatThaiDate(actualCheckout)}\n
‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏≠‡∏≤‡∏ó‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏Ñ‡∏£‡∏±‡∏ö\n
--------------------\n
‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ üè´SmartDormüéâ ‡∏Ñ‡∏£‡∏±‡∏ö`;

    await notifyUser(booking.customer.userId, userMsg);
    return updated;
  },

  /* üóëÔ∏è ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô */
  async deleteCheckout(bookingId: string) {
    const booking = await checkoutRepository.findBookingById(bookingId);
    if (!booking) throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô");

    return await checkoutRepository.updateBooking(bookingId, {
      checkout: null,
      actualCheckout: null,
      returnStatus: null,
      checkoutStatus: 0,
    });
  },
};
