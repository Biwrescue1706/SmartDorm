import Swal from "sweetalert2";
import { type Admin } from "../../types/admin";
import { API_BASE } from "../../config";

interface Props {
  admins: Admin[];
  currentPage: number;
  rowsPerPage: number;
  onEdit: (admin: Admin) => void;
  refresh: () => void;
}

export default function AdminTable({
  admins,
  currentPage,
  rowsPerPage,
  onEdit,
  refresh,
}: Props) {
  const indexOfFirst = (currentPage - 1) * rowsPerPage;

  const handleDelete = async (admin: Admin, index: number) => {
    // ‚ùå ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏Ñ‡∏ô‡πÅ‡∏£‡∏Å‡πÉ‡∏ô database
    if (admin.role === 0 && index === 0) {
      Swal.fire({
        icon: "warning",
        title: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡πÑ‡∏î‡πâ",
        text: "‡∏´‡πâ‡∏≤‡∏°‡∏•‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏Ñ‡∏ô‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö",
        confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á",
      });
      return;
    }

    const confirm = await Swal.fire({
      title: "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö",
      html: `‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö <b>${admin.username}</b>?`,
      icon: "warning",
      showCancelButton: true,
      confirmButtonText: "‡∏•‡∏ö‡πÄ‡∏•‡∏¢",
      cancelButtonText: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
      confirmButtonColor: "#d33",
      cancelButtonColor: "#6c757d",
    });

    if (!confirm.isConfirmed) return;

    try {
      const res = await fetch(`${API_BASE}/admin/${admin.adminId}`, {
        method: "DELETE",
        credentials: "include",
      });

      if (!res.ok) {
        Swal.fire("‡∏•‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ", "error");
        return;
      }

      Swal.fire("‡∏•‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!", `‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ "${admin.username}" ‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÅ‡∏•‡πâ‡∏ß`, "success");
      refresh();
    } catch {
      Swal.fire("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ", "error");
    }
  };

  return (
    <div
      className="border rounded mt-3"
      style={{ maxHeight: "70vh", overflowY: "auto" }}
    >
      <table className="table table-sm table-striped text-center align-middle">
        <thead className="table-dark">
          <tr>
            <th>#</th>
            <th>‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</th>
            <th>‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏£‡∏¥‡∏á</th>
            <th>‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå</th>
            <th>‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</th>
            <th>‡∏•‡∏ö</th>
          </tr>
        </thead>
        <tbody>
          {admins.map((admin, i) => (
            <tr key={admin.adminId}>
              <td>{indexOfFirst + i + 1}</td>
              <td>{admin.username}</td>
              <td>{admin.name}</td>
              <td>{admin.role === 0 ? "‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏´‡∏•‡∏±‡∏Å" : "‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô"}</td>

              {/* ‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç */}
              <td>
                <button
                  className="btn btn-sm btn-warning text-white"
                  onClick={() => onEdit(admin)}
                >
                  ‚úèÔ∏è
                </button>
              </td>

              {/* ‚úÖ ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏´‡πâ‡∏≤‡∏°‡∏•‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏Ñ‡∏ô‡πÅ‡∏£‡∏Å */}
              <td>
                {admin.role === 0 && i === 0 ? (
                  <span className="text-muted">‚Äî</span>
                ) : (
                  <button
                    className="btn btn-sm btn-danger"
                    onClick={() => handleDelete(admin, i)}
                  >
                    üóëÔ∏è
                  </button>
                )}
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
}
