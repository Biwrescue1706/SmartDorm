import { useNavigate, useLocation } from "react-router-dom";
import { useState, useEffect } from "react";

/* ======================================================
   üß≠ Component: Nav.tsx (Full Bootstrap Version)
   ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô (Topbar) + ‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡πâ‡∏≤‡∏á (Sidebar)
   ‡πÑ‡∏°‡πà‡∏°‡∏µ CSS ‡πÅ‡∏¢‡∏Å ‡πÉ‡∏ä‡πâ class ‡∏Ç‡∏≠‡∏á Bootstrap ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
   ====================================================== */

export interface NavProps {
  message: string;
  onLogout: () => void;
  pendingBookings?: number;
  role?: number | null;
}

/* ======================================================
   üß± Component ‡∏´‡∏•‡∏±‡∏Å
====================================================== */
export default function Nav({
  message,
  onLogout,
  pendingBookings,
  role,
}: NavProps) {
  const navigate = useNavigate();
  const location = useLocation();

  // state ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° dropdown ‡πÅ‡∏•‡∏∞ collapse menu
  const [menuOpen, setMenuOpen] = useState(false);
  const [dropdownOpen, setDropdownOpen] = useState<string | null>(null);

  const isSuperAdmin = role === 0;

  // ‡πÄ‡∏õ‡∏¥‡∏î dropdown ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ï‡∏≤‡∏° path
  useEffect(() => {
    if (
      location.pathname.startsWith("/rooms") ||
      location.pathname.startsWith("/bookings") ||
      location.pathname.startsWith("/checkout")
    ) {
      setDropdownOpen("room");
    } else if (
      location.pathname.startsWith("/bills") ||
      location.pathname.startsWith("/allbills")
    ) {
      setDropdownOpen("bill");
    } else {
      setDropdownOpen(null);
    }
  }, [location.pathname]);

  // toggle dropdown
  const toggleDropdown = (key: string) => {
    setDropdownOpen(dropdownOpen === key ? null : key);
  };

  // ‡∏õ‡∏¥‡∏î‡πÄ‡∏°‡∏ô‡∏π (‡πÉ‡∏ä‡πâ‡∏ö‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠)
  const closeMenu = () => setMenuOpen(false);

  /* ======================================================
     üß≠ ‡∏™‡πà‡∏ß‡∏ô Top Navbar (Bootstrap Navbar)
  ====================================================== */
  return (
    <>
      {/* ======= TOPBAR ======= */}
      <nav className="navbar navbar-expand-lg navbar-dark bg-primary fixed-top shadow-sm">
        <div className="container-fluid">
          {/* ‡πÇ‡∏•‡πÇ‡∏Å‡πâ */}
          <a className="navbar-brand fw-bold" href="#">
            SmartDorm
          </a>

          {/* ‡∏õ‡∏∏‡πà‡∏° toggle ‡∏ö‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠ */}
          <button
            className="navbar-toggler"
            type="button"
            onClick={() => setMenuOpen(!menuOpen)}
            aria-controls="navbarNav"
            aria-expanded={menuOpen}
            aria-label="Toggle navigation"
          >
            <span className="navbar-toggler-icon"></span>
          </button>

          {/* ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö */}
          <div className="d-none d-lg-flex flex-column align-items-end text-white small">
            {role === 0 ? (
              <>
                <span className="text-white-50">‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö ‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö</span>
                <span className="fw-bold text-warning">{message}</span>
              </>
            ) : role === 1 ? (
              <>
                <span className="text-white-50">‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</span>
                <span className="fw-bold text-info">{message}</span>
              </>
            ) : (
              <span>‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</span>
            )}
          </div>
        </div>
      </nav>

      {/* ======================================================
         üì± ‡∏™‡πà‡∏ß‡∏ô Collapse (‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î ‚ò∞ ‡∏ö‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠)
      ====================================================== */}
      <div
        className={`collapse navbar-collapse bg-primary text-white ${
          menuOpen ? "show" : ""
        }`}
        id="navbarNav"
      >
        <ul className="navbar-nav flex-column p-3">
          {/* ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å */}
          <li className="nav-item mb-2">
            <button
              className={`btn w-100 text-start ${
                location.pathname === "/dashboard"
                  ? "btn-light text-primary fw-bold"
                  : "btn-outline-light"
              }`}
              onClick={() => {
                navigate("/dashboard");
                closeMenu();
              }}
            >
              üè† ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
            </button>
          </li>

          {/* ======================================================
             üè† ‡∏´‡∏°‡∏ß‡∏î ‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å
          ====================================================== */}
          <li className="nav-item mb-2">
            <button
              className="btn btn-outline-light w-100 text-start d-flex justify-content-between align-items-center"
              onClick={() => toggleDropdown("room")}
            >
              <span>üõèÔ∏è ‡∏´‡πâ‡∏≠‡∏á</span>
              <span>{dropdownOpen === "room" ? "‚ñ¥" : "‚ñæ"}</span>
            </button>

            {/* Submenu ‡∏´‡πâ‡∏≠‡∏á */}
            {dropdownOpen === "room" && (
              <ul className="list-unstyled ps-3 mt-2">
                {isSuperAdmin && (
                  <li className="mb-1">
                    <button
                      className={`btn w-100 text-start ${
                        location.pathname.startsWith("/rooms")
                          ? "btn-light text-primary fw-bold"
                          : "btn-outline-light"
                      }`}
                      onClick={() => {
                        navigate("/rooms");
                        closeMenu();
                      }}
                    >
                      üèòÔ∏è ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å
                    </button>
                  </li>
                )}
                <li className="mb-1">
                  <button
                    className={`btn w-100 text-start position-relative ${
                      location.pathname.startsWith("/bookings")
                        ? "btn-light text-primary fw-bold"
                        : "btn-outline-light"
                    }`}
                    onClick={() => {
                      navigate("/bookings");
                      closeMenu();
                    }}
                  >
                    üìë ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
                    {(pendingBookings ?? 0) > 0 && (
                      <span className="position-absolute top-0 end-0 translate-middle badge rounded-pill bg-danger">
                        {pendingBookings}
                      </span>
                    )}
                  </button>
                </li>
                <li>
                  <button
                    className={`btn w-100 text-start ${
                      location.pathname.startsWith("/checkout")
                        ? "btn-light text-primary fw-bold"
                        : "btn-outline-light"
                    }`}
                    onClick={() => {
                      navigate("/checkout");
                      closeMenu();
                    }}
                  >
                    üîÑ ‡∏´‡∏ô‡πâ‡∏≤‡∏Ñ‡∏∑‡∏ô
                  </button>
                </li>
              </ul>
            )}
          </li>

          {/* ======================================================
             üí∞ ‡∏´‡∏°‡∏ß‡∏î ‡∏ö‡∏¥‡∏•
          ====================================================== */}
          <li className="nav-item mb-2">
            <button
              className="btn btn-outline-light w-100 text-start d-flex justify-content-between align-items-center"
              onClick={() => toggleDropdown("bill")}
            >
              <span>üí∞ ‡∏ö‡∏¥‡∏•</span>
              <span>{dropdownOpen === "bill" ? "‚ñ¥" : "‚ñæ"}</span>
            </button>

            {dropdownOpen === "bill" && (
              <ul className="list-unstyled ps-3 mt-2">
                <li className="mb-1">
                  <button
                    className={`btn w-100 text-start ${
                      location.pathname.startsWith("/bills")
                        ? "btn-light text-primary fw-bold"
                        : "btn-outline-light"
                    }`}
                    onClick={() => {
                      navigate("/bills");
                      closeMenu();
                    }}
                  >
                    üíµ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏¥‡∏•
                  </button>
                </li>
                <li>
                  <button
                    className={`btn w-100 text-start ${
                      location.pathname.startsWith("/allbills")
                        ? "btn-light text-primary fw-bold"
                        : "btn-outline-light"
                    }`}
                    onClick={() => {
                      navigate("/allbills");
                      closeMenu();
                    }}
                  >
                    üìã ‡∏ö‡∏¥‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                  </button>
                </li>
              </ul>
            )}
          </li>

          {/* ======================================================
             üë§ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ Super Admin)
          ====================================================== */}
          {isSuperAdmin && (
            <li className="nav-item mb-2">
              <button
                className={`btn w-100 text-start ${
                  location.pathname.startsWith("/admin/manage")
                    ? "btn-light text-primary fw-bold"
                    : "btn-outline-light"
                }`}
                onClick={() => {
                  navigate("/admin/manage");
                  closeMenu();
                }}
              >
                üë§ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
              </button>
            </li>
          )}

          {/* ======================================================
             üë• ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
          ====================================================== */}
          <li className="nav-item mb-3">
            <button
              className={`btn w-100 text-start ${
                location.pathname.startsWith("/users")
                  ? "btn-light text-primary fw-bold"
                  : "btn-outline-light"
              }`}
              onClick={() => {
                navigate("/users");
                closeMenu();
              }}
            >
              üë• ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
            </button>
          </li>

          {/* ======================================================
             üö™ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
          ====================================================== */}
          <li className="nav-item border-top pt-3">
            <button
              className="btn btn-danger w-100 fw-bold"
              onClick={() => {
                onLogout();
                closeMenu();
              }}
            >
              üö™ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
            </button>
          </li>
        </ul>
      </div>

      {/* ======================================================
         üñ•Ô∏è Sidebar ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏≠‡πÉ‡∏´‡∏ç‡πà (‚â•1400px)
      ====================================================== */}
      <div className="d-none d-xxl-flex flex-column bg-primary text-white position-fixed top-0 start-0 h-100 shadow">
        <div className="p-3 flex-grow-1 mt-5">
          <div className="fw-bold fs-5 text-center mb-3 border-bottom border-light pb-2">
            üè´ SmartDorm
          </div>

          <div className="d-flex flex-column gap-2">
            <button
              className={`btn text-start ${
                location.pathname === "/dashboard"
                  ? "btn-light text-primary fw-bold"
                  : "btn-outline-light"
              }`}
              onClick={() => navigate("/dashboard")}
            >
              üè† ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
            </button>

            {/* ‡∏´‡πâ‡∏≠‡∏á */}
            <div>
              <button
                className="btn btn-outline-light w-100 text-start d-flex justify-content-between align-items-center"
                onClick={() => toggleDropdown("room")}
              >
                <span>üõèÔ∏è ‡∏´‡πâ‡∏≠‡∏á</span>
                <span>{dropdownOpen === "room" ? "‚ñ¥" : "‚ñæ"}</span>
              </button>

              {dropdownOpen === "room" && (
                <div className="ps-3 mt-2 d-flex flex-column gap-2">
                  {isSuperAdmin && (
                    <button
                      className={`btn text-start ${
                        location.pathname.startsWith("/rooms")
                          ? "btn-light text-primary fw-bold"
                          : "btn-outline-light"
                      }`}
                      onClick={() => navigate("/rooms")}
                    >
                      üèòÔ∏è ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å
                    </button>
                  )}
                  <button
                    className={`btn text-start position-relative ${
                      location.pathname.startsWith("/bookings")
                        ? "btn-light text-primary fw-bold"
                        : "btn-outline-light"
                    }`}
                    onClick={() => navigate("/bookings")}
                  >
                    üìë ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
                    {(pendingBookings ?? 0) > 0 && (
                      <span className="position-absolute top-0 end-0 translate-middle badge rounded-pill bg-danger">
                        {pendingBookings}
                      </span>
                    )}
                  </button>
                  <button
                    className={`btn text-start ${
                      location.pathname.startsWith("/checkout")
                        ? "btn-light text-primary fw-bold"
                        : "btn-outline-light"
                    }`}
                    onClick={() => navigate("/checkout")}
                  >
                    üîÑ ‡∏´‡∏ô‡πâ‡∏≤‡∏Ñ‡∏∑‡∏ô
                  </button>
                </div>
              )}
            </div>

            {/* ‡∏ö‡∏¥‡∏• */}
            <div>
              <button
                className="btn btn-outline-light w-100 text-start d-flex justify-content-between align-items-center"
                onClick={() => toggleDropdown("bill")}
              >
                <span>üí∞ ‡∏ö‡∏¥‡∏•</span>
                <span>{dropdownOpen === "bill" ? "‚ñ¥" : "‚ñæ"}</span>
              </button>

              {dropdownOpen === "bill" && (
                <div className="ps-3 mt-2 d-flex flex-column gap-2">
                  <button
                    className={`btn text-start ${
                      location.pathname.startsWith("/bills")
                        ? "btn-light text-primary fw-bold"
                        : "btn-outline-light"
                    }`}
                    onClick={() => navigate("/bills")}
                  >
                    üíµ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏¥‡∏•
                  </button>
                  <button
                    className={`btn text-start ${
                      location.pathname.startsWith("/allbills")
                        ? "btn-light text-primary fw-bold"
                        : "btn-outline-light"
                    }`}
                    onClick={() => navigate("/allbills")}
                  >
                    üìã ‡∏ö‡∏¥‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                  </button>
                </div>
              )}
            </div>

            {isSuperAdmin && (
              <button
                className={`btn text-start ${
                  location.pathname.startsWith("/admin/manage")
                    ? "btn-light text-primary fw-bold"
                    : "btn-outline-light"
                }`}
                onClick={() => navigate("/admin/manage")}
              >
                üë§ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
              </button>
            )}

            <button
              className={`btn text-start ${
                location.pathname.startsWith("/users")
                  ? "btn-light text-primary fw-bold"
                  : "btn-outline-light"
              }`}
              onClick={() => navigate("/users")}
            >
              üë• ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
            </button>
          </div>
        </div>

        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö */}
        <div className="p-3 border-top border-light text-center">
          <button
            className="btn btn-danger w-100 fw-bold"
            onClick={onLogout}
          >
            üö™ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
          </button>
        </div>
      </div>
    </>
  );
}